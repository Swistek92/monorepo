name: CI/CD for Backend

on:
  push:
    paths:
      - "apps/backend/**" # Kiedy zmiany są wprowadzane w folderze backend
  pull_request:
    paths:
      - "apps/backend/**" # Kiedy zmiany są wprowadzane w folderze backend

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repozytorium
      - name: Checkout code
        uses: actions/checkout@v2

      # Ustawienie Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16" # Wybierz odpowiednią wersję Node.js

      # Instalacja zależności
      - name: Install dependencies
        run: |
          cd apps/backend
          npm install

      # Uruchomienie testów NX
      - name: Run Jest tests
        run: |
          cd apps/backend
          nx run backend:test  # Uruchamia testy dla aplikacji backend

      # Jeśli testy zakończą się sukcesem, zbuduj i wypchnij obraz Docker
      - name: Build Docker image
        if: success() # Zbuduj obraz tylko jeśli testy zakończyły się sukcesem
        run: |
          docker build -t swistek/my-backend:latest apps/backend  # Zbudowanie obrazu w folderze backend
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}  # Logowanie do Docker Hub
          docker push swistek/my-backend:latest  # Wypychanie obrazu na Docker Hub

      # Opcjonalne czyszczenie lokalnych obrazów Docker
      - name: Remove local Docker images
        run: |
          docker rmi swistek/my-backend:latest
